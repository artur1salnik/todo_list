{"version":3,"sources":["components/Header/index.js","components/ListItem/index.js","components/List/index.js","components/Search/index.js","components/Filter/index.js","components/ItemAddForm/index.js","components/App/index.js","index.js"],"names":["Header","toDo","done","className","ListItem","this","props","label","isDone","isImportant","onClickDelete","onClickImportant","onClickDone","classNames","btnSuccessClassName","btnPrimaryClassName","onClick","type","class","React","Component","List","todos","todoElements","map","todo","id","todoProps","Search","state","searchValue","onChangeSearch","e","setState","target","value","placeholder","onChange","Filter","buttons","name","btn","buttonClass","filter","onChangeFilter","ItemAddForm","onLabelChange","onSubmitForm","preventDefault","length","onClickAdd","onSubmit","App","todoData","deleteTodoItem","todoIndex","findIndex","item","slice","addTodoItem","text","newTodo","createTodoItem","toggleProperty","array","propertyName","oldTodo","Date","now","toString","toLowerCase","indexOf","visibleTodos","filterTodos","searchTodos","countDoneItems","countTodoItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c912d1f.chunk.js","sourcesContent":["import \"./index.css\";\r\n\r\n\r\nconst Header = ({ toDo, done }) => {\r\n    return (\r\n        <div className='header d-flex'>\r\n            <h1>Todo list</h1>\r\n            <h5>{toDo} more to do, {done} done</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\n\r\nclass ListItem extends React.Component {\r\n\r\n    render() {\r\n        const {\r\n            label,\r\n            isDone,\r\n            isImportant,\r\n            onClickDelete,\r\n            onClickImportant,\r\n            onClickDone\r\n        } = this.props\r\n        let classNames = 'todo-item'\r\n        let btnSuccessClassName = 'btn btn-outline-success btn-sm'\r\n        let btnPrimaryClassName = 'btn btn-outline-primary btn-sm float-end'\r\n        if (isDone) {\r\n            classNames += ' done'\r\n            btnSuccessClassName = 'btn btn-success btn-sm'\r\n        }\r\n        if (isImportant) {\r\n            classNames += ' important'\r\n            btnPrimaryClassName = 'btn btn-primary btn-sm float-end'\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <button onClick={onClickDone} type='button' className={btnSuccessClassName}>\r\n                    <i class='fa fa-check-square-o' />\r\n                </button>\r\n                <span className='todo-item-label'>\r\n                    {label}\r\n                </span>\r\n                <button onClick={onClickDelete} type='button' className='btn btn-outline-danger btn-sm float-end'>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n                <button onClick={onClickImportant} type='button' className={btnPrimaryClassName}>\r\n                    <i className=\"fa fa-exclamation-circle\" />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem;","import ListItem from \"../ListItem\";\r\nimport \"./index.css\";\r\n\r\n\r\nconst List = ({ todos, onClickDelete, onClickImportant, onClickDone }) => {\r\n\r\n    const todoElements = todos.map(todo => {\r\n        const { id, ...todoProps } = todo\r\n\r\n        return (\r\n            <li className='list-group-item' key={todo.id}>\r\n                <ListItem\r\n                    {...todoProps}\r\n                    onClickDelete={() => onClickDelete(id)}\r\n                    onClickImportant={() => onClickImportant(id)}\r\n                    onClickDone={() => onClickDone(id)} />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className='list-group'>\r\n            {todoElements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\n\r\nclass Search extends React.Component {\r\n\r\n    state = {\r\n        searchValue: ''\r\n    }\r\n\r\n    onChangeSearch = (e) => {\r\n        this.setState({\r\n            searchValue: e.target.value\r\n        })\r\n        this.props.onChangeSearch(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                type='text'\r\n                className='form-control search'\r\n                placeholder='Search'\r\n                value={this.state.searchValue}\r\n                onChange={this.onChangeSearch}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\n\r\nclass Filter extends React.Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ]\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(btn => {\r\n            const isActive = this.props.filter === btn.name\r\n            const buttonClass = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button\r\n                    key={btn.name}\r\n                    type='button'\r\n                    className={`btn ${buttonClass}`}\r\n                    onClick={() => this.props.onChangeFilter(btn.name)}>\r\n                    {btn.label}\r\n                </button>\r\n            )\r\n        })\r\n        return (\r\n            <div className='btn-group'>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\n\r\nclass ItemAddForm extends React.Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitForm = (e) => {\r\n        e.preventDefault()\r\n        if (this.state.label.length) {\r\n            this.props.onClickAdd(this.state.label)\r\n            this.setState({\r\n                label: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className='item-add-form d-flex' onSubmit={this.onSubmitForm}>\r\n                <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    placeholder='What do you need to do?'\r\n                    value={this.state.label}\r\n                    onChange={this.onLabelChange}\r\n                />\r\n                <button className='btn btn-outline-secondary add-todo'>Add todo</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemAddForm;","import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport List from \"../List\";\r\nimport Search from \"../Search\";\r\nimport Filter from \"../Filter\";\r\nimport ItemAddForm from \"../ItemAddForm\";\r\nimport \"./index.css\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        todoData: [],\r\n        searchValue: '',\r\n        filter: 'all'\r\n    }\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            id: Date.now().toString(),\r\n            label,\r\n            isImportant: false,\r\n            isDone: false\r\n        }\r\n    }\r\n\r\n    deleteTodoItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const todoIndex = todoData.findIndex(item => item.id === id)\r\n            const newTodoData = [\r\n                ...todoData.slice(0, todoIndex),\r\n                ...todoData.slice(todoIndex + 1)\r\n            ]\r\n            return {\r\n                todoData: newTodoData\r\n            }\r\n        })\r\n    }\r\n\r\n    addTodoItem = (text) => {\r\n        const newTodo = this.createTodoItem(text)\r\n        this.setState(({ todoData }) => {\r\n            const newTodoData = [\r\n                ...todoData,\r\n                newTodo\r\n            ]\r\n            return {\r\n                todoData: newTodoData\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleProperty = (array, id, propertyName) => {\r\n        const todoIndex = array.findIndex(item => item.id === id)\r\n        const oldTodo = array[todoIndex]\r\n        const newTodo = {\r\n            ...oldTodo,\r\n            [propertyName]: !oldTodo[propertyName]\r\n        }\r\n        return [\r\n            ...array.slice(0, todoIndex),\r\n            newTodo,\r\n            ...array.slice(todoIndex + 1)\r\n        ]\r\n    }\r\n\r\n    onClickImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'isImportant')\r\n            }\r\n        })\r\n    }\r\n\r\n    onClickDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'isDone')\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeSearch = (searchValue) => {\r\n        this.setState({\r\n            searchValue\r\n        })\r\n    }\r\n\r\n    onChangeFilter = (filter) => {\r\n        this.setState({\r\n            filter\r\n        })\r\n    }\r\n\r\n    searchTodos(todos, searchValue) {\r\n        if (searchValue === '') {\r\n            return todos\r\n        }\r\n        return todos.filter(todo => {\r\n            return todo.label.toLowerCase()\r\n                .indexOf(searchValue\r\n                    .toLowerCase()) > -1\r\n        })\r\n    }\r\n\r\n    filterTodos(todos, filter) {\r\n        switch (filter) {\r\n            case 'active':\r\n                return todos.filter(todo => !todo.isDone)\r\n            case 'done':\r\n                return todos.filter(todo => todo.isDone)\r\n            case 'all':\r\n                return todos\r\n            default:\r\n                return todos\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { todoData, searchValue, filter } = this.state\r\n        const visibleTodos = this.filterTodos(this.searchTodos(todoData, searchValue), filter)\r\n        const countDoneItems = todoData.filter(todo => todo.isDone).length\r\n        const countTodoItems = todoData.filter(todo => !todo.isDone).length\r\n\r\n        return (\r\n            <div className='todo-app'>\r\n                <Header toDo={countTodoItems} done={countDoneItems} />\r\n                <div className='search-filter d-flex'>\r\n                    <Search onChangeSearch={this.onChangeSearch} />\r\n                    <Filter filter={filter} onChangeFilter={this.onChangeFilter} />\r\n                </div>\r\n                {visibleTodos.length\r\n                    ? <List\r\n                        todos={visibleTodos}\r\n                        onClickDelete={this.deleteTodoItem}\r\n                        onClickImportant={this.onClickImportant}\r\n                        onClickDone={this.onClickDone} />\r\n                    : <div className='emptyList'>The list is empty</div>\r\n                }\r\n                <ItemAddForm onClickAdd={this.addTodoItem} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}